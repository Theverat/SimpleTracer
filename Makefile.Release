#############################################################################
# Makefile for building: SimpleTracer
# Generated by qmake (2.01a) (Qt 4.8.1) on: Mi 16. Mai 16:18:54 2012
# Project:  SimpleTracer.pro
# Template: app
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DUNICODE -DQT_LARGEFILE_SUPPORT -DQT_DLL -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_HAVE_MMX -DQT_HAVE_3DNOW -DQT_HAVE_SSE -DQT_HAVE_MMXEXT -DQT_HAVE_SSE2 -DQT_THREAD_SUPPORT -DQT_NEEDS_QMAIN
CFLAGS        = -O2 -Wall $(DEFINES)
CXXFLAGS      = -fopenmp -O2 -frtti -fexceptions -mthreads -Wall $(DEFINES)
INCPATH       = -I"..\..\ProgrammeHDD\QtSDK\Desktop\Qt\4.8.1\mingw\include\QtCore" -I"..\..\ProgrammeHDD\QtSDK\Desktop\Qt\4.8.1\mingw\include\QtGui" -I"..\..\ProgrammeHDD\QtSDK\Desktop\Qt\4.8.1\mingw\include" -I"..\..\ProgrammeHDD\QtSDK\Desktop\Qt\4.8.1\mingw\include\ActiveQt" -I"release" -I"." -I"..\..\ProgrammeHDD\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\win32-g++"
LINK        =        g++
LFLAGS        =        -Wl,-s -mthreads -Wl,-subsystem,windows
LIBS        =        -L"f:\Users\Simon_2\ProgrammeHDD\QtSDK\Desktop\Qt\4.8.1\mingw\lib" -lmingw32 -lqtmain -fopenmp -lQtGui4 -lQtCore4 
QMAKE         = f:\users\simon_2\programmehdd\qtsdk\desktop\qt\4.8.1\mingw\bin\qmake.exe
IDC           = f:\Users\Simon_2\ProgrammeHDD\QtSDK\Desktop\Qt\4.8.1\mingw\bin\idc.exe
IDL           = midl
ZIP           = zip -r -9
DEF_FILE      = 
RES_FILE      = 
COPY          = copy /y
SED           = 
COPY_FILE     = $(COPY)
COPY_DIR      = xcopy /s /q /y /i
DEL_FILE      = del
DEL_DIR       = rmdir
MOVE          = move
CHK_DIR_EXISTS= if not exist
MKDIR         = mkdir
INSTALL_FILE    = $(COPY_FILE)
INSTALL_PROGRAM = $(COPY_FILE)
INSTALL_DIR     = $(COPY_DIR)

####### Output directory

OBJECTS_DIR   = release

####### Files

SOURCES       = main.cpp \
		mainwindow.cpp \
		camera.cpp \
		sphere.cpp \
		raytracer.cpp \
		object.cpp \
		material.cpp \
		triangle.cpp \
		plane.cpp \
		world.cpp \
		light.cpp \
		integrator.cpp \
		pathtracer.cpp \
		rgbiimage.cpp \
		worldloader.cpp release\moc_mainwindow.cpp \
		release\moc_raytracer.cpp
OBJECTS       = release/main.o \
		release/mainwindow.o \
		release/camera.o \
		release/sphere.o \
		release/raytracer.o \
		release/object.o \
		release/material.o \
		release/triangle.o \
		release/plane.o \
		release/world.o \
		release/light.o \
		release/integrator.o \
		release/pathtracer.o \
		release/rgbiimage.o \
		release/worldloader.o \
		release/moc_mainwindow.o \
		release/moc_raytracer.o
DIST          = 
QMAKE_TARGET  = SimpleTracer
DESTDIR        = release\ #avoid trailing-slash linebreak
TARGET         = SimpleTracer.exe
DESTDIR_TARGET = release\SimpleTracer.exe

####### Implicit rules

.SUFFIXES: .cpp .cc .cxx .c

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

first: all
all: Makefile.Release  $(DESTDIR_TARGET)

$(DESTDIR_TARGET): ui_mainwindow.h $(OBJECTS) 
	$(LINK) $(LFLAGS) -o $(DESTDIR_TARGET) object_script.SimpleTracer.Release  $(LIBS)

qmake:  FORCE
	@$(QMAKE) -spec ..\..\ProgrammeHDD\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\win32-g++ CONFIG+=declarative_debug -o Makefile.Release SimpleTracer.pro

dist:
	$(ZIP) SimpleTracer.zip $(SOURCES) $(DIST) SimpleTracer.pro ..\..\ProgrammeHDD\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\qconfig.pri ..\..\ProgrammeHDD\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\modules\qt_webkit_version.pri ..\..\ProgrammeHDD\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\qt_functions.prf ..\..\ProgrammeHDD\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\qt_config.prf ..\..\ProgrammeHDD\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\exclusive_builds.prf ..\..\ProgrammeHDD\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\default_pre.prf ..\..\ProgrammeHDD\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\win32\default_pre.prf ..\..\ProgrammeHDD\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\release.prf ..\..\ProgrammeHDD\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\debug_and_release.prf ..\..\ProgrammeHDD\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\default_post.prf ..\..\ProgrammeHDD\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\win32\default_post.prf ..\..\ProgrammeHDD\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\build_pass.prf ..\..\ProgrammeHDD\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\declarative_debug.prf ..\..\ProgrammeHDD\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\win32\rtti.prf ..\..\ProgrammeHDD\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\win32\exceptions.prf ..\..\ProgrammeHDD\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\win32\stl.prf ..\..\ProgrammeHDD\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\shared.prf ..\..\ProgrammeHDD\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\warn_on.prf ..\..\ProgrammeHDD\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\qt.prf ..\..\ProgrammeHDD\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\win32\thread.prf ..\..\ProgrammeHDD\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\moc.prf ..\..\ProgrammeHDD\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\win32\windows.prf ..\..\ProgrammeHDD\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\resources.prf ..\..\ProgrammeHDD\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\uic.prf ..\..\ProgrammeHDD\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\yacc.prf ..\..\ProgrammeHDD\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\lex.prf ..\..\ProgrammeHDD\QtSDK\Desktop\Qt\4.8.1\mingw\mkspecs\features\include_source_dir.prf f:\Users\Simon_2\ProgrammeHDD\QtSDK\Desktop\Qt\4.8.1\mingw\lib\qtmain.prl  HEADERS RESOURCES IMAGES SOURCES OBJECTIVE_SOURCES FORMS YACCSOURCES YACCSOURCES LEXSOURCES 

clean: compiler_clean 
	-$(DEL_FILE) release\main.o release\mainwindow.o release\camera.o release\sphere.o release\raytracer.o release\object.o release\material.o release\triangle.o release\plane.o release\world.o release\light.o release\integrator.o release\pathtracer.o release\rgbiimage.o release\worldloader.o release\moc_mainwindow.o release\moc_raytracer.o

distclean: clean
	-$(DEL_FILE) $(DESTDIR_TARGET)
	-$(DEL_FILE) Makefile.Release

check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: release/moc_mainwindow.cpp release/moc_raytracer.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) release\moc_mainwindow.cpp release\moc_raytracer.cpp
release/moc_mainwindow.cpp: integrator.h \
		raytracer.h \
		predefs.h \
		sphere.h \
		geometry.h \
		ray.h \
		camera.h \
		object.h \
		material.h \
		plane.h \
		triangle.h \
		world.h \
		light.h \
		pathtracer.h \
		rgbiimage.h \
		worldloader.h \
		mainwindow.h
	F:\Users\Simon_2\ProgrammeHDD\QtSDK\Desktop\Qt\4.8.1\mingw\bin\moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 mainwindow.h -o release\moc_mainwindow.cpp

release/moc_raytracer.cpp: predefs.h \
		sphere.h \
		geometry.h \
		ray.h \
		camera.h \
		object.h \
		material.h \
		plane.h \
		triangle.h \
		world.h \
		light.h \
		raytracer.h
	F:\Users\Simon_2\ProgrammeHDD\QtSDK\Desktop\Qt\4.8.1\mingw\bin\moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 raytracer.h -o release\moc_raytracer.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_mainwindow.h
compiler_uic_clean:
	-$(DEL_FILE) ui_mainwindow.h
ui_mainwindow.h: mainwindow.ui
	f:\Users\Simon_2\ProgrammeHDD\QtSDK\Desktop\Qt\4.8.1\mingw\bin\uic.exe mainwindow.ui -o ui_mainwindow.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_uic_clean 



####### Compile

release/main.o: main.cpp mainwindow.h \
		integrator.h \
		raytracer.h \
		predefs.h \
		sphere.h \
		geometry.h \
		ray.h \
		camera.h \
		object.h \
		material.h \
		plane.h \
		triangle.h \
		world.h \
		light.h \
		pathtracer.h \
		rgbiimage.h \
		worldloader.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\main.o main.cpp

release/mainwindow.o: mainwindow.cpp mainwindow.h \
		integrator.h \
		raytracer.h \
		predefs.h \
		sphere.h \
		geometry.h \
		ray.h \
		camera.h \
		object.h \
		material.h \
		plane.h \
		triangle.h \
		world.h \
		light.h \
		pathtracer.h \
		rgbiimage.h \
		worldloader.h \
		ui_mainwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\mainwindow.o mainwindow.cpp

release/camera.o: camera.cpp camera.h \
		ray.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\camera.o camera.cpp

release/sphere.o: sphere.cpp sphere.h \
		geometry.h \
		ray.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\sphere.o sphere.cpp

release/raytracer.o: raytracer.cpp raytracer.h \
		predefs.h \
		sphere.h \
		geometry.h \
		ray.h \
		camera.h \
		object.h \
		material.h \
		plane.h \
		triangle.h \
		world.h \
		light.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\raytracer.o raytracer.cpp

release/object.o: object.cpp object.h \
		geometry.h \
		ray.h \
		sphere.h \
		material.h \
		plane.h \
		triangle.h \
		predefs.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\object.o object.cpp

release/material.o: material.cpp material.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\material.o material.cpp

release/triangle.o: triangle.cpp triangle.h \
		predefs.h \
		plane.h \
		geometry.h \
		ray.h \
		abs.cpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\triangle.o triangle.cpp

release/plane.o: plane.cpp plane.h \
		geometry.h \
		ray.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\plane.o plane.cpp

release/world.o: world.cpp world.h \
		camera.h \
		ray.h \
		object.h \
		geometry.h \
		sphere.h \
		material.h \
		plane.h \
		triangle.h \
		predefs.h \
		light.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\world.o world.cpp

release/light.o: light.cpp light.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\light.o light.cpp

release/integrator.o: integrator.cpp integrator.h \
		raytracer.h \
		predefs.h \
		sphere.h \
		geometry.h \
		ray.h \
		camera.h \
		object.h \
		material.h \
		plane.h \
		triangle.h \
		world.h \
		light.h \
		pathtracer.h \
		rgbiimage.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\integrator.o integrator.cpp

release/pathtracer.o: pathtracer.cpp pathtracer.h \
		predefs.h \
		sphere.h \
		geometry.h \
		ray.h \
		camera.h \
		object.h \
		material.h \
		plane.h \
		triangle.h \
		world.h \
		light.h \
		rgbiimage.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\pathtracer.o pathtracer.cpp

release/rgbiimage.o: rgbiimage.cpp rgbiimage.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\rgbiimage.o rgbiimage.cpp

release/worldloader.o: worldloader.cpp worldloader.h \
		predefs.h \
		world.h \
		camera.h \
		ray.h \
		object.h \
		geometry.h \
		sphere.h \
		material.h \
		plane.h \
		triangle.h \
		light.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\worldloader.o worldloader.cpp

release/moc_mainwindow.o: release/moc_mainwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\moc_mainwindow.o release\moc_mainwindow.cpp

release/moc_raytracer.o: release/moc_raytracer.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\moc_raytracer.o release\moc_raytracer.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

